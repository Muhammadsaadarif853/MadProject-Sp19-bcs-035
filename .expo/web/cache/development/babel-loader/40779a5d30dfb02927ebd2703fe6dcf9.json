{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport CInput from \"../TextInput\";\nimport { useDeviceOrientation } from \"../useDeviceOrientation\";\nimport { useDetectDevice } from \"../utilsScale\";\nimport { styles } from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar isTablet = useDetectDevice.isTablet,\n    isIOS = useDetectDevice.isIOS;\n\nvar ic_down = require(\"../assets/icon/down.png\");\n\nvar defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  backgroundColor: 'white',\n  data: [],\n  style: {}\n};\nvar MultiSelectComponent = React.forwardRef(function (props, currentRef) {\n  var orientation = useDeviceOrientation();\n  var onChange = props.onChange,\n      data = props.data,\n      value = props.value,\n      style = props.style,\n      labelField = props.labelField,\n      valueField = props.valueField,\n      selectedStyle = props.selectedStyle,\n      selectedTextStyle = props.selectedTextStyle,\n      iconStyle = props.iconStyle,\n      activeColor = props.activeColor,\n      containerStyle = props.containerStyle,\n      fontFamily = props.fontFamily,\n      placeholderStyle = props.placeholderStyle,\n      _props$iconColor = props.iconColor,\n      iconColor = _props$iconColor === void 0 ? \"gray\" : _props$iconColor,\n      inputSearchStyle = props.inputSearchStyle,\n      searchPlaceholder = props.searchPlaceholder,\n      placeholder = props.placeholder,\n      _props$search = props.search,\n      search = _props$search === void 0 ? false : _props$search,\n      _props$maxHeight = props.maxHeight,\n      maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,\n      _props$disable = props.disable,\n      disable = _props$disable === void 0 ? false : _props$disable,\n      renderItem = props.renderItem,\n      renderLeftIcon = props.renderLeftIcon,\n      renderRightIcon = props.renderRightIcon,\n      renderSelectedItem = props.renderSelectedItem,\n      renderInputSearch = props.renderInputSearch,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$showsVerticalS = props.showsVerticalScrollIndicator,\n      showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,\n      _props$dropdownPositi = props.dropdownPosition,\n      dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi;\n  var ref = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentValue = _useState4[0],\n      setCurrentValue = _useState4[1];\n\n  var _useState5 = useState(data),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listData = _useState6[0],\n      setListData = _useState6[1];\n\n  var _useState7 = useState(Math.random()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      key = _useState8[0],\n      setKey = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      position = _useState10[0],\n      setPosition = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      focus = _useState12[0],\n      setFocus = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      keyboardHeight = _useState14[0],\n      setKeyboardHeight = _useState14[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      W = _Dimensions$get.width,\n      H = _Dimensions$get.height;\n\n  var styleContainerVertical = {\n    backgroundColor: 'rgba(0,0,0,0.1)',\n    alignItems: 'center'\n  };\n  var styleHorizontal = {\n    marginBottom: 20,\n    width: W / 2,\n    alignSelf: 'center'\n  };\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(function () {\n    setListData(data);\n  }, [data]);\n\n  var eventOpen = function eventOpen() {\n    if (!disable) {\n      setVisible(true);\n\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  };\n\n  var eventClose = function eventClose() {\n    if (!disable) {\n      setVisible(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  };\n\n  var font = function font() {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  };\n\n  var onKeyboardDidShow = function onKeyboardDidShow(e) {\n    setKeyboardHeight(e.endCoordinates.height + (isIOS ? 0 : 50));\n  };\n\n  var onKeyboardDidHide = function onKeyboardDidHide() {\n    setKeyboardHeight(0);\n  };\n\n  useEffect(function () {\n    var susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    var susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return function () {\n      if (susbcriptionKeyboardDidShow != null && susbcriptionKeyboardDidShow.remove) {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n\n      if (susbcriptionKeyboardDidHide != null && susbcriptionKeyboardDidHide.remove) {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    getValue();\n  }, [value]);\n\n  var getValue = function getValue() {\n    setCurrentValue(value ? _toConsumableArray(value) : []);\n  };\n\n  var showOrClose = function showOrClose() {\n    if (!disable) {\n      _measure();\n\n      setVisible(!visible);\n      setListData(data);\n\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n  };\n\n  var onSelect = function onSelect(item) {\n    onSearch('');\n    var index = currentValue.findIndex(function (e) {\n      return e === item[valueField];\n    });\n\n    if (index > -1) {\n      currentValue.splice(index, 1);\n    } else {\n      currentValue.push(item[valueField]);\n    }\n\n    onChange(currentValue);\n    setKey(Math.random());\n  };\n\n  var _renderDropdown = function _renderDropdown() {\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: showOrClose,\n      children: _jsxs(View, {\n        style: styles.dropdown,\n        children: [renderLeftIcon == null ? void 0 : renderLeftIcon(), _jsx(Text, {\n          style: [styles.textItem, placeholderStyle, font()],\n          children: placeholder\n        }), renderRightIcon ? renderRightIcon() : _jsx(Image, {\n          source: ic_down,\n          style: [styles.icon, {\n            tintColor: iconColor\n          }, iconStyle]\n        })]\n      })\n    });\n  };\n\n  var checkSelected = function checkSelected(item) {\n    var index = currentValue.findIndex(function (e) {\n      return e === item[valueField];\n    });\n    return index > -1;\n  };\n\n  var _renderItem = function _renderItem(_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return onSelect(item);\n      },\n      style: [checkSelected(item) && {\n        backgroundColor: activeColor,\n        marginBottom: 0.5\n      }],\n      children: renderItem ? renderItem(item) : _jsx(View, {\n        style: styles.item,\n        children: _jsx(Text, {\n          style: [styles.textItem, placeholderStyle, font()],\n          children: item[labelField]\n        })\n      })\n    }, index);\n  };\n\n  var onSearch = function onSearch(text) {\n    if (text.length > 0) {\n      var dataSearch = data.filter(function (e) {\n        var _e$labelField;\n\n        var item = (_e$labelField = e[labelField]) == null ? void 0 : _e$labelField.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      });\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  };\n\n  var renderSearch = function renderSearch() {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(function (text) {\n          onSearch(text);\n        });\n      } else {\n        return _jsx(CInput, {\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          keyboardType: isIOS ? 'default' : 'visible-password',\n          placeholder: searchPlaceholder,\n          onChangeText: onSearch,\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle],\n          onFocus: function onFocus() {\n            return setFocus(true);\n          },\n          onBlur: function onBlur() {\n            setFocus(false);\n          }\n        });\n      }\n    }\n\n    return null;\n  };\n\n  var _renderListTop = function _renderListTop() {\n    return _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(FlatList, {\n        keyboardShouldPersistTaps: \"handled\",\n        data: listData,\n        inverted: true,\n        renderItem: _renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator\n      }), renderSearch()]\n    });\n  };\n\n  var _renderListBottom = function _renderListBottom() {\n    return _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [renderSearch(), _jsx(FlatList, {\n        keyboardShouldPersistTaps: \"handled\",\n        data: listData,\n        renderItem: _renderItem,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        showsVerticalScrollIndicator: showsVerticalScrollIndicator\n      })]\n    });\n  };\n\n  var _renderModal = useCallback(function () {\n    if (visible && position) {\n      var isFull = position.isFull,\n          w = position.w,\n          top = position.top,\n          bottom = position.bottom,\n          left = position.left,\n          height = position.height;\n\n      if (w && top && bottom) {\n        var styleVertical = {\n          left: left,\n          maxHeight: maxHeight\n        };\n        var isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : 300) : dropdownPosition === 'top' ? true : false;\n        var topHeight = isTopPosition ? top - height : top;\n        var keyboardStyle = {};\n\n        if (renderInputSearch) {\n          if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n            if (isTopPosition) {\n              topHeight = H - keyboardHeight;\n            } else {\n              keyboardStyle = {\n                backgroundColor: 'rgba(0,0,0,0.1)'\n              };\n              topHeight = H - keyboardHeight - 55;\n            }\n          }\n        } else {\n          if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n            if (isTopPosition) {\n              topHeight = H - keyboardHeight;\n            } else {\n              keyboardStyle = {\n                backgroundColor: 'rgba(0,0,0,0.1)'\n              };\n              topHeight = H - keyboardHeight - 55;\n            }\n          }\n        }\n\n        return _jsx(Modal, {\n          transparent: true,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          children: _jsx(TouchableWithoutFeedback, {\n            onPress: showOrClose,\n            children: _jsxs(View, {\n              style: [{\n                flex: 1\n              }, isFull && styleContainerVertical, keyboardStyle],\n              children: [_jsx(View, {\n                style: {\n                  height: topHeight,\n                  width: w,\n                  justifyContent: 'flex-end'\n                },\n                children: isTopPosition && _jsx(View, {\n                  style: [{\n                    width: w\n                  }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical],\n                  children: _renderListTop()\n                })\n              }), _jsx(View, {\n                style: {\n                  flex: 1\n                },\n                children: !isTopPosition && _jsx(View, {\n                  style: [{\n                    width: w\n                  }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical],\n                  children: _renderListBottom()\n                })\n              })]\n            })\n          })\n        });\n      }\n\n      return null;\n    }\n\n    return null;\n  }, [focus, position, visible, keyboardHeight, listData]);\n\n  var _measure = function _measure() {\n    if (ref) {\n      ref.current.measure(function (width, height, px, py, fx, fy) {\n        var isFull = orientation === 'LANDSCAPE' && !isTablet;\n        var w = parseInt(px);\n        var top = isFull ? 20 : parseInt(py) + parseInt(fy) + 2;\n        var bottom = H - top;\n        var left = parseInt(fx);\n        setPosition({\n          isFull: isFull,\n          w: w,\n          top: top,\n          bottom: parseInt(bottom),\n          left: left,\n          height: parseInt(py)\n        });\n      });\n    }\n  };\n\n  var unSelect = function unSelect(item) {\n    if (!disable) {\n      onSelect(item);\n    }\n  };\n\n  var _renderItemSelected = function _renderItemSelected() {\n    var list = data.filter(function (e) {\n      var check = value == null ? void 0 : value.indexOf(e[valueField]);\n\n      if (check !== -1) {\n        return e;\n      }\n    });\n    return _jsx(View, {\n      style: {\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      children: list.map(function (e) {\n        if (renderSelectedItem) {\n          return _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return unSelect(e);\n            },\n            children: renderSelectedItem(e, function () {\n              unSelect(e);\n            })\n          }, e[labelField]);\n        } else {\n          return _jsxs(TouchableOpacity, {\n            style: [styles.selectedItem, selectedStyle],\n            onPress: function onPress() {\n              return unSelect(e);\n            },\n            children: [_jsx(Text, {\n              style: [{\n                fontSize: 12,\n                color: 'gray'\n              }, selectedTextStyle, font()],\n              children: e[labelField]\n            }), _jsx(Text, {\n              style: [styles.selectedTextItem, selectedTextStyle],\n              children: \"\\u24E7\"\n            })]\n          }, e[labelField]);\n        }\n      })\n    });\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: [{\n        justifyContent: 'center'\n      }, style],\n      ref: ref,\n      onLayout: _measure,\n      children: [_renderDropdown(), _renderModal()]\n    }), !visible && _renderItemSelected()]\n  });\n});\nMultiSelectComponent.defaultProps = defaultProps;\nexport default MultiSelectComponent;","map":{"version":3,"sources":["E:/Mad Project Final/Madad/node_modules/react-native-element-dropdown/src/MultiSelect/index.tsx"],"names":["React","useCallback","useEffect","useImperativeHandle","useRef","useState","CInput","useDeviceOrientation","useDetectDevice","styles","isTablet","isIOS","ic_down","require","defaultProps","placeholder","activeColor","backgroundColor","data","style","MultiSelectComponent","forwardRef","props","currentRef","orientation","onChange","value","labelField","valueField","selectedStyle","selectedTextStyle","iconStyle","containerStyle","fontFamily","placeholderStyle","iconColor","inputSearchStyle","searchPlaceholder","search","maxHeight","disable","renderItem","renderLeftIcon","renderRightIcon","renderSelectedItem","renderInputSearch","onFocus","onBlur","showsVerticalScrollIndicator","dropdownPosition","ref","visible","setVisible","currentValue","setCurrentValue","listData","setListData","Math","random","key","setKey","position","setPosition","focus","setFocus","keyboardHeight","setKeyboardHeight","Dimensions","get","W","width","H","height","styleContainerVertical","alignItems","styleHorizontal","marginBottom","alignSelf","open","eventOpen","close","eventClose","font","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","Keyboard","addListener","susbcriptionKeyboardDidHide","remove","removeListener","getValue","showOrClose","_measure","onSelect","item","onSearch","index","findIndex","splice","push","_renderDropdown","dropdown","textItem","icon","tintColor","checkSelected","_renderItem","text","length","dataSearch","filter","toLowerCase","replace","normalize","indexOf","renderSearch","input","_renderListTop","flex","toString","_renderListBottom","_renderModal","isFull","w","top","bottom","left","styleVertical","isTopPosition","topHeight","keyboardStyle","justifyContent","container","current","measure","px","py","fx","fy","parseInt","unSelect","_renderItemSelected","list","check","flexDirection","flexWrap","map","selectedItem","fontSize","color","selectedTextItem"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport {\n  Dimensions, FlatList,\n  Image, Keyboard, Modal, Text, TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  KeyboardEvent,\n} from 'react-native';\nimport CInput from '../TextInput';\nimport { useDeviceOrientation } from '../useDeviceOrientation';\nimport { useDetectDevice } from '../utilsScale';\nimport { styles } from './styles';\nimport { MultiSelectProps } from './type';\n\nconst { isTablet, isIOS } = useDetectDevice;\nconst ic_down = require('../assets/icon/down.png');\n\nconst defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  backgroundColor: 'white',\n  data: [],\n  style: {},\n}\n\nconst MultiSelectComponent = React.forwardRef((props: MultiSelectProps, currentRef) => {\n  const orientation = useDeviceOrientation();\n  const {\n    onChange,\n    data,\n    value,\n    style,\n    labelField,\n    valueField,\n    selectedStyle,\n    selectedTextStyle,\n    iconStyle,\n    activeColor,\n    containerStyle,\n    fontFamily,\n    placeholderStyle,\n    iconColor = \"gray\",\n    inputSearchStyle,\n    searchPlaceholder,\n    placeholder,\n    search = false,\n    maxHeight = 340,\n    disable = false,\n    renderItem,\n    renderLeftIcon,\n    renderRightIcon,\n    renderSelectedItem,\n    renderInputSearch,\n    onFocus,\n    onBlur,\n    showsVerticalScrollIndicator = true,\n    dropdownPosition = 'auto'\n  } = props;\n\n  const ref = useRef<View>(null);\n  const [visible, setVisible] = useState<boolean>(false);\n  const [currentValue, setCurrentValue] = useState<any[]>([]);\n  const [listData, setListData] = useState<any[]>(data);\n  const [key, setKey] = useState<number>(Math.random());\n  const [position, setPosition] = useState<any>();\n  const [focus, setFocus] = useState<boolean>(false);\n  const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n  const { width: W, height: H } = Dimensions.get('window');\n  const styleContainerVertical: ViewStyle = { backgroundColor: 'rgba(0,0,0,0.1)', alignItems: 'center' };\n  const styleHorizontal: ViewStyle = { marginBottom: 20, width: W / 2, alignSelf: 'center' };\n\n  useImperativeHandle(currentRef, () => {\n    return { open: eventOpen, close: eventClose };\n  });\n\n  useEffect(() => {\n    setListData(data);\n  }, [data]);\n\n  const eventOpen = () => {\n    if (!disable) {\n      setVisible(true);\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  }\n\n  const eventClose = () => {\n    if (!disable) {\n      setVisible(false);\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }\n\n  const font = () => {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      }\n    } else {\n      return {}\n    }\n  };\n\n  const onKeyboardDidShow = (e: KeyboardEvent) => {\n    setKeyboardHeight(e.endCoordinates.height + (isIOS ? 0 : 50));\n  };\n\n  const onKeyboardDidHide = () => {\n    setKeyboardHeight(0);\n  };\n\n  useEffect(() => {\n    const susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    const susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n\n    return () => {\n      if (susbcriptionKeyboardDidShow?.remove) {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n\n      if (susbcriptionKeyboardDidHide?.remove) {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    getValue();\n  }, [value]);\n\n  const getValue = () => {\n    setCurrentValue(value ? [...value] : []);\n  };\n\n  const showOrClose = () => {\n    if (!disable) {\n      _measure();\n      setVisible(!visible);\n      setListData(data);\n\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n  };\n\n  const onSelect = (item: any) => {\n    onSearch('');\n\n    const index = currentValue.findIndex(e => e === item[valueField]);\n    if (index > -1) {\n      currentValue.splice(index, 1);\n    } else {\n      currentValue.push(item[valueField]);\n    }\n    onChange(currentValue);\n    setKey(Math.random());\n  };\n\n  const _renderDropdown = () => {\n    return (\n      <TouchableWithoutFeedback onPress={showOrClose}>\n        <View style={styles.dropdown}>\n          {renderLeftIcon?.()}\n          <Text style={[styles.textItem, placeholderStyle, font()]}>\n            {placeholder}\n          </Text>\n          {renderRightIcon ? renderRightIcon() : <Image source={ic_down} style={[styles.icon, { tintColor: iconColor }, iconStyle]} />}\n        </View>\n      </TouchableWithoutFeedback>\n    )\n  };\n\n  const checkSelected = (item: any) => {\n    const index = currentValue.findIndex(e => e === item[valueField]);\n    return index > -1;\n  };\n\n  const _renderItem = ({ item, index }: { item: any; index: number }) => {\n    return (\n      <TouchableOpacity key={index} onPress={() => onSelect(item)} style={[checkSelected(item) && { backgroundColor: activeColor, marginBottom: 0.5 }]}>\n        {renderItem ? renderItem(item) : <View style={styles.item}>\n          <Text style={[styles.textItem, placeholderStyle, font()]}>{item[labelField]}</Text>\n        </View>}\n      </TouchableOpacity>\n    );\n  };\n\n  const onSearch = (text: string) => {\n    if (text.length > 0) {\n      const dataSearch = data.filter(e => {\n        const item = e[labelField]?.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        const key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n\n        return item.indexOf(key) >= 0\n      });\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  };\n\n  const renderSearch = () => {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch((text) => { onSearch(text) });\n      } else {\n        return <CInput\n          style={[styles.input, inputSearchStyle]}\n          inputStyle={[inputSearchStyle, font()]}\n          autoCorrect={false}\n          keyboardType={isIOS ? 'default' : 'visible-password'}\n          placeholder={searchPlaceholder}\n          onChangeText={onSearch}\n          placeholderTextColor=\"gray\"\n          iconStyle={[{ tintColor: iconColor }, iconStyle]}\n          onFocus={() => setFocus(true)}\n          onBlur={() => { setFocus(false) }}\n        />\n      }\n    }\n    return null;\n  }\n\n  const _renderListTop = () => {\n    return <View style={{ flex: 1 }}>\n      <FlatList\n        keyboardShouldPersistTaps=\"handled\"\n        data={listData}\n        inverted\n        renderItem={_renderItem}\n        keyExtractor={(item, index) => index.toString()}\n        showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n      />\n      {renderSearch()}\n    </View>\n  };\n\n\n  const _renderListBottom = () => {\n    return <View style={{ flex: 1 }}>\n      {renderSearch()}\n      <FlatList\n        keyboardShouldPersistTaps=\"handled\"\n        data={listData}\n        renderItem={_renderItem}\n        keyExtractor={(item, index) => index.toString()}\n        showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n      />\n    </View>\n  };\n\n  const _renderModal = useCallback(() => {\n    if (visible && position) {\n      const {\n        isFull,\n        w,\n        top,\n        bottom,\n        left,\n        height\n      } = position\n      if (w && top && bottom) {\n        const styleVertical: ViewStyle = { left: left, maxHeight: maxHeight };\n        const isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : 300) : dropdownPosition === 'top' ? true : false;\n        let topHeight = isTopPosition ? top - height : top;\n\n        let keyboardStyle: ViewStyle = {};\n        if (renderInputSearch) {\n          if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n            if (isTopPosition) {\n              topHeight = H - keyboardHeight;\n            } else {\n              keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n              topHeight = H - keyboardHeight - 55;\n            }\n          }\n        } else {\n          if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n            if (isTopPosition) {\n              topHeight = H - keyboardHeight;\n            } else {\n              keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n              topHeight = H - keyboardHeight - 55;\n            }\n          }\n        }\n\n        return <Modal transparent visible={visible} supportedOrientations={['landscape', 'portrait']}>\n          <TouchableWithoutFeedback onPress={showOrClose}>\n            <View style={[{ flex: 1 }, isFull && styleContainerVertical, keyboardStyle]}>\n              <View style={{ height: topHeight, width: w, justifyContent: 'flex-end' }}>\n                {isTopPosition && <View style={[{ width: w }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]}>\n                  {_renderListTop()}\n                </View>}\n              </View>\n              <View style={{ flex: 1 }}>\n                {!isTopPosition && <View style={[{ width: w }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]}>\n                  {_renderListBottom()}\n                </View>}\n              </View>\n            </View>\n          </TouchableWithoutFeedback>\n        </Modal>\n      }\n      return null;\n    }\n    return null;\n  }, [focus, position, visible, keyboardHeight, listData]);\n\n  const _measure = () => {\n    if (ref) {\n      ref.current.measure((width, height, px, py, fx, fy) => {\n        const isFull = orientation === 'LANDSCAPE' && !isTablet;\n        const w = parseInt(px);\n        const top = isFull ? 20 : parseInt(py) + parseInt(fy) + 2;\n        const bottom = H - top;\n        const left = parseInt(fx);\n\n        setPosition({\n          isFull,\n          w,\n          top,\n          bottom: parseInt(bottom),\n          left,\n          height: parseInt(py)\n        });\n      })\n    }\n  };\n\n  const unSelect = (item: any) => {\n    if (!disable) {\n      onSelect(item);\n    }\n  };\n\n  const _renderItemSelected = () => {\n    const list = data.filter((e: any) => {\n      const check = value?.indexOf(e[valueField]);\n      if (check !== -1) {\n        return e;\n      }\n    });\n\n    return (\n      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>\n        {list.map(e => {\n          if (renderSelectedItem) {\n            return <TouchableOpacity\n              key={e[labelField]}\n              onPress={() => unSelect(e)}\n            >\n              {renderSelectedItem(e, () => { unSelect(e) })}\n            </TouchableOpacity>\n          } else {\n            return (\n              <TouchableOpacity\n                key={e[labelField]}\n                style={[styles.selectedItem, selectedStyle]}\n                onPress={() => unSelect(e)}\n              >\n                <Text style={[{ fontSize: 12, color: 'gray' }, selectedTextStyle, font()]}>{e[labelField]}</Text>\n                <Text style={[styles.selectedTextItem, selectedTextStyle]}>ⓧ</Text>\n              </TouchableOpacity>\n            )\n          }\n        })}\n      </View>)\n  };\n\n  return (\n    <>\n      <View style={[{ justifyContent: 'center' }, style]} ref={ref} onLayout={_measure}>\n        {_renderDropdown()}\n        {_renderModal()}\n      </View>\n      {!visible && _renderItemSelected()}\n    </>\n  );\n});\n\nMultiSelectComponent.defaultProps = defaultProps;\n\nexport default MultiSelectComponent;\n\n"]},"metadata":{},"sourceType":"module"}